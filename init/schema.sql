DROP TABLE IF EXISTS ImageAutographs;
DROP TABLE IF EXISTS TextAutographs;
DROP TABLE IF EXISTS AlbumAccess;
DROP TABLE IF EXISTS Photos;
DROP TABLE IF EXISTS Albums;
DROP TABLE IF EXISTS Users;


CREATE TABLE Users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    firstName TEXT NOT NULL,
    lastName TEXT,
    vkId INTEGER NOT NULL,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Albums (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    userId INTEGER NOT NULL,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (userId) REFERENCES Users(id) ON DELETE CASCADE
);

CREATE TABLE Photos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    albumId INTEGER NOT NULL,
    uploaderId INTEGER,
    path TEXT NOT NULL,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (albumId) REFERENCES Albums(id) ON DELETE CASCADE,
    FOREIGN KEY (uploaderId) REFERENCES Users(id) ON DELETE SET NULL
);

CREATE TABLE AlbumAccess (
    albumId INTEGER,
    userId INTEGER,
    accessLevel INTEGER NOT NULL DEFAULT 2, -- crd (4:create|2:read|1:delete)

    FOREIGN KEY (albumId) REFERENCES Albums(id) ON DELETE CASCADE,
    FOREIGN KEY (userId) REFERENCES Users(id) ON DELETE CASCADE
);

CREATE TABLE TextAutographs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    photoId INTEGER NOT NULL,
    authorId INTEGER NOT NULL,
    content TEXT NOT NULL,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (photoId) REFERENCES Photos(id) ON DELETE CASCADE,
    FOREIGN KEY (authorId) REFERENCES Users(id) ON DELETE CASCADE
);

CREATE TABLE ImageAutographs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    photoId INTEGER NOT NULL,
    authorId INTEGER NOT NULL,
    path TEXT NOT NULL,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (photoId) REFERENCES Photos(id) ON DELETE CASCADE,
    FOREIGN KEY (authorId) REFERENCES Users(id) ON DELETE CASCADE
);

